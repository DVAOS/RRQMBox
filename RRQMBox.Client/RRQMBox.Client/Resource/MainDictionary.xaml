<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Custom="RRQM_Windows"
    xmlns:controls="RRQM_Controls"
    xmlns:primitives="RRQM_Primitives">
    <SolidColorBrush x:Key="foregroundColor" Color="#FFF7F4F5" />
    <SolidColorBrush x:Key="backgroundColor" Color="#141414" />

    <Style x:Key="button" TargetType="Button">
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="70" />
    </Style>

    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle" Width="8" Height="{TemplateBinding Height}" CornerRadius="4" SnapsToDevicePixels="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value="1" />
                            <Setter TargetName="rectangle" Property="Background" Value="#A6A6A6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Opacity" Value="0.2" />
                            <Setter TargetName="rectangle" Property="Background" Value="#A6A6A6" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="rectangle" Property="Background" Value="#606060" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Width" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Border Width="8" Background="Transparent" BorderThickness="0" />

                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RRQMWindowStyle" TargetType="{x:Type Custom:RRQMWindow}">
        <Setter Property="Foreground" Value="{StaticResource foregroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:RRQMWindow}">
                    <Border x:Name="mainBorder" Background="{StaticResource backgroundColor}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid x:Name="header" Grid.Row="0" Panel.ZIndex="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="title" Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Image x:Name="ico" Width="20" Height="20" Margin="3,0" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{TemplateBinding Icon}" />
                                    <ContentPresenter Grid.Column="1" Margin="3,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Content="{TemplateBinding TitleContent}" />
                                </Grid>
                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                    <Button x:Name="minButton" Command="{Binding MinWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="&#xE622;">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="FontFamily" Value="/RRQMSkin;component/Fonts/#iconfont" />
                                                <Setter Property="FontSize" Value="16" />
                                                <Setter Property="Foreground" Value="#FFF7F4F5" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border x:Name="border" Width="25" Height="25" Margin="3,0" BorderThickness="1">
                                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="border" Property="BorderBrush" Value="#FFE9E3B1" />
                                                                    <Setter TargetName="border" Property="Background" Value="#1F1F1F" />
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="False">
                                                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button x:Name="maxOrNormalButton" Command="{Binding MaxOrNormalWindowCommand, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="FontFamily" Value="/RRQMSkin;component/Fonts/#iconfont" />
                                                <Setter Property="FontSize" Value="16" />
                                                <Setter Property="Foreground" Value="#FFF7F4F5" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border x:Name="border" Width="25" Height="25" Margin="3,0" BorderThickness="1">
                                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="border" Property="BorderBrush" Value="#FFE9E3B1" />
                                                                    <Setter TargetName="border" Property="Background" Value="#1F1F1F" />
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="False">
                                                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button x:Name="closeButton" Command="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="&#xE62C;">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="FontFamily" Value="/RRQMSkin;component/Fonts/#iconfont" />
                                                <Setter Property="FontSize" Value="16" />
                                                <Setter Property="Foreground" Value="#FFF7F4F5" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border x:Name="border" Width="25" Height="25" Margin="3,0" BorderThickness="1">
                                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="border" Property="BorderBrush" Value="#FFE9E3B1" />
                                                                    <Setter TargetName="border" Property="Background" Value="#1F1F1F" />
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="False">
                                                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <AdornerDecorator x:Name="content" Grid.Row="1" Grid.RowSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" />
                            </AdornerDecorator>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowStyle" Value="SingleBorderWindow">
                            <Setter TargetName="minButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="maxOrNormalButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="closeButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="WindowStyle" Value="ToolWindow">
                            <Setter TargetName="minButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="maxOrNormalButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="closeButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ico" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ContentFill" Value="True">
                            <Setter TargetName="content" Property="Grid.Row" Value="0" />
                        </Trigger>
                        <Trigger Property="ContentFill" Value="False">
                            <Setter TargetName="content" Property="Grid.Row" Value="1" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="maxOrNormalButton" Property="Content" Value="&#xE60D;" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="maxOrNormalButton" Property="Content" Value="&#xE65B;" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />
    <Style x:Key="inputBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#3D3D3D" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
        <Setter Property="SelectionBrush" Value="Black" />
        <Setter Property="CaretBrush" Value="#FF9CA3A8" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FFF7F4F5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Margin="3" BorderBrush="#1B6DE0" BorderThickness="1" CornerRadius="5" SnapsToDevicePixels="True">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="-1" Color="White" />
                        </Border.Effect>
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:CorrugatedButton}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FFF7F4F5" />
        <Setter Property="Background" Value="#1B6DE0" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CorrugatedButton}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid x:Name="mainGrid">
                            <Canvas Panel.ZIndex="-1">
                                <Ellipse x:Name="CorrugatedEllipse" Width="1" Height="1" Fill="{TemplateBinding CorrugatedBrush}" />
                            </Canvas>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundProgressBarStyle" TargetType="{x:Type controls:RoundProgressBar}">
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#FF2B65F0" />
                    <GradientStop Offset="1" Color="#FFFF3BA4" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:RoundProgressBar}">
                    <Viewbox>
                        <Grid Width="100" Height="100">
                            <primitives:Sector EndAngle="360" Fill="{TemplateBinding Background}" MaxRadiusRatio="1" MinRadiusRatio="0.7" StartAngle="0" Stroke="Transparent" />
                            <primitives:Sector x:Name="sector" Fill="{TemplateBinding Foreground}" MaxRadiusRatio="1" MinRadiusRatio="0.7" RoundStyle="Both" StartAngle="0" Stroke="Transparent" />
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="#FFF7F4F5" Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, StringFormat=0.00%}" />
                        </Grid>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Value" Value="0">
                            <Setter TargetName="sector" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpeedDialStyle" TargetType="{x:Type controls:SpeedDial}">
        <Setter Property="Foreground" Value="#FFF7F4F5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SpeedDial}">
                    <Viewbox>
                        <Grid MinWidth="200" MinHeight="200">
                            <Ellipse />
                            <primitives:Sector EndAngle="230" Fill="#FF00BE8B" MaxRadiusRatio="0.98" MinRadiusRatio="0.8" StartAngle="149" />
                            <primitives:Sector EndAngle="320" Fill="#FF14BEFF" MaxRadiusRatio="0.98" MinRadiusRatio="0.8" StartAngle="230" />
                            <primitives:Sector EndAngle="391" Fill="#FFFF2975" MaxRadiusRatio="0.98" MinRadiusRatio="0.8" StartAngle="320" />
                            <primitives:Sector EndAngle="{TemplateBinding PointerAngle}" Fill="Orange" MaxRadiusRatio="0.8" MinRadiusRatio="0.7" StartAngle="149" />
                            <primitives:Dial MaxRadiusRatio="0.95" MinRadiusRatio="0.7" StartAngle="150" Stroke="Black" StrokeThickness="3" TickAngle="30" TickCount="9" />
                            <primitives:Dial MaxRadiusRatio="0.95" MinRadiusRatio="0.8" StartAngle="165" Stroke="Black" StrokeThickness="2" TickAngle="30" TickCount="8" />
                            <primitives:Dial MaxRadiusRatio="0.95" MinRadiusRatio="0.8" StartAngle="157.5" Stroke="Black" StrokeThickness="1" TickAngle="15" TickCount="16" />
                            <primitives:DialText FontSize="12" RadiusRatio="0.6" StartAngle="150" Text="0,60,120,180,240,300,360,420,480" TickAngle="30" />
                            <primitives:DialText FontSize="6" RadiusRatio="0.7" StartAngle="165" Text="30,90,150,210,270,330,390,450" TickAngle="30" />
                            <primitives:DialText FontSize="20" RadiusRatio="0.5" StartAngle="80" Text="单位（MB）" />
                            <primitives:DialText FontSize="12" RadiusRatio="0.3" StartAngle="80" Text="{Binding Speed, StringFormat=0.00MB/s, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <primitives:Pointer x:Name="pointer" RatioAngle="{TemplateBinding PointerAngle}" RatioCenter="0.2,0.5">
                                <primitives:Pointer.Effect>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="Blue" />
                                </primitives:Pointer.Effect>
                                <primitives:Pointer.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FF3C57F5" />
                                        <GradientStop Offset="1" Color="#FFF38F8A" />
                                    </LinearGradientBrush>
                                </primitives:Pointer.Fill>
                            </primitives:Pointer>
                            <Ellipse Width="10" Height="10" Fill="White" />
                            <Ellipse Width="8" Height="8" Stroke="DarkCyan" StrokeThickness="1" />
                        </Grid>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransferFileListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" Background="Transparent" BorderThickness="0" SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border x:Name="root" Margin="3,5" Background="#7A7875" CornerRadius="3">
                                    <Grid Margin="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock VerticalAlignment="Center" FontSize="20" Foreground="White" Text="{Binding FileName}" />
                                        <TextBlock Grid.Column="1" Margin="3" VerticalAlignment="Center" Foreground="White" Text="{Binding TransferType}" />
                                        <TextBlock Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" FontSize="10" Foreground="White" Text="{Binding FilePath}" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="root" Property="Background" Value="#9B9792" />
                                    </Trigger>

                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="root" Property="Background" Value="#6F6A65" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>